server: 
  port: 8090
  
spring: 
  application: 
    name: cloud-sample-consumer
  cloud: 
    config:  
      uri: http://localhost:8762
    loadbalancer: 
      retry: 
        enabled: true
    zookeeper: 
      connectString: 192.168.142.128:2181
    stream: 
      kafka: 
        binder: 
          zk-nodes: 192.168.142.128
          brokers: 192.168.142.128
  zipkin:
    base-url: http://localhost:8764/
  sleuth:
    stream:
      enabled: false
    sampler:
      percentage: 0.5
      
zipkin:
  collector: 
    kafka: 
      zookeeper: 192.168.142.128:2181

# ribbon 请求 provider 对应的  spring.applicaiton.name ，供  LoadBalancer 时从 Eureka 查对应的服务用
colorcc-sample-consumer-ribbon: 
  ribbon:
#    eureka:
#      enabled: false
#    listOfServers: localhost:8081,localhost:8082
    ServerListRefreshInterval: 1000
    MaxAutoRetries: 3
    MaxAutoRetriesNextServer: 3
    OkToRetryOnAllOperations: true
    ConnectTimeout: 250
    ReadTimeout: 1000
    
provider: 
  name: cloud-sample-provider
    
eureka:
  instance: 
    instanceId:  ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5